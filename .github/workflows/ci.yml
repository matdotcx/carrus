name: CI
on:
  push:
    branches: [ "main", "gold" ]
  pull_request:
    branches: [ "main", "gold" ]
jobs:
  test:
    runs-on: macos-latest  # Since this is a macOS package manager
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install hatch pytest pytest-asyncio ruff
        pip install -e .
        
    - name: Lint with ruff
      run: |
        python -m ruff check .
        python -m ruff format --check .
        
    - name: Run tests
      run: |
        python -m pytest tests/ -v
    
    - name: Test version tracking
      run: |
        python -m pytest tests/test_database.py::TestVersionTracking tests/test_updater.py::TestVersionTracker -v
        
    - name: Check database schema
      run: |
        python -c "from carrus.core.database import Database; from pathlib import Path; db = Database(Path('./test.db')); print('Database schema created successfully')"
  build:
    needs: test
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install hatch
        
    - name: Build package
      run: |
        hatch build
        
    - name: Upload dist artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/